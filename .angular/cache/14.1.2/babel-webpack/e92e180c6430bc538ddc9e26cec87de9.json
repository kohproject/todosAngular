{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../btn/btn.component\";\n\nconst _c0 = function (a0) {\n  return {\n    \"open\": a0\n  };\n};\n\nexport let AddTaskComponent = /*#__PURE__*/(() => {\n  class AddTaskComponent {\n    constructor() {\n      this.complete = false;\n      this.EmitAddTask = new EventEmitter();\n      this.tlen = 0;\n      this.addTask = '';\n      this.taskPriority = 1;\n      this.openBool = false;\n      this.btnShoStatus = this.openBool;\n      this.linktxt = \"Add a new Task\";\n    }\n\n    resetForm() {\n      this.addTask = \"\";\n      this.taskPriority = 1;\n      this.openBool = !this.openBool;\n    }\n\n    openNewTask() {\n      this.openBool = !this.openBool;\n      this.btnShoStatus = this.openBool; //  this.linktxt = (this.openBool) ? \"Close New Task\" : \"Add a new Task\";\n    }\n\n    clicked() {\n      if (this.addTask === '') {\n        alert('please enter a new task');\n        return;\n      }\n\n      let obj = {\n        id: 'id' + this.tlen,\n        name: this.addTask,\n        importance: this.taskPriority,\n        done: false\n      };\n      this.EmitAddTask.emit(obj);\n      if (this.complete) this.resetForm();\n    }\n\n    ngOnInit() {}\n\n  }\n\n  AddTaskComponent.ɵfac = function AddTaskComponent_Factory(t) {\n    return new (t || AddTaskComponent)();\n  };\n\n  AddTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTaskComponent,\n    selectors: [[\"app-add-task\"]],\n    inputs: {\n      complete: \"complete\",\n      tlen: \"tlen\"\n    },\n    outputs: {\n      EmitAddTask: \"EmitAddTask\"\n    },\n    decls: 24,\n    vars: 8,\n    consts: [[\"bg\", \"#00889a\", \"txt\", \"add task\", 3, \"addTaskStatus\", \"btnShoStatus\", \"click\"], [3, \"ngClass\"], [1, \"add-task\"], [1, \"flex\", \"col\"], [\"type\", \"text\", \"name\", \"addTask\", \"id\", \"inp_add-task\", 1, \"inp__add-task\", 3, \"ngModel\", \"ngModelChange\"], [1, \"flex\", \"txt__priority\"], [\"id\", \"sel__priority\", \"name\", \"taskPriority\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"value\", \"4\"], [\"value\", \"5\"], [\"txt\", \"add new task\", \"bg\", \"#00889a\", 3, \"addTaskStatus\", \"click\"], [1, \"close-win\", 3, \"click\"]],\n    template: function AddTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-btn\", 0);\n        i0.ɵɵlistener(\"click\", function AddTaskComponent_Template_app_btn_click_0_listener() {\n          return ctx.openNewTask();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"fieldset\", 1)(2, \"form\")(3, \"div\", 2)(4, \"h4\");\n        i0.ɵɵtext(5, \"Add new task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.addTask = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\", 5)(9, \"label\");\n        i0.ɵɵtext(10, \"Priority:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.taskPriority = $event;\n        });\n        i0.ɵɵelementStart(12, \"option\", 7);\n        i0.ɵɵtext(13, \"1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 8);\n        i0.ɵɵtext(15, \"2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 9);\n        i0.ɵɵtext(17, \"3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 10);\n        i0.ɵɵtext(19, \"4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 11);\n        i0.ɵɵtext(21, \"5\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(22, \"app-btn\", 12);\n        i0.ɵɵlistener(\"click\", function AddTaskComponent_Template_app_btn_click_22_listener() {\n          return ctx.clicked();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"a\", 13);\n        i0.ɵɵlistener(\"click\", function AddTaskComponent_Template_a_click_23_listener() {\n          return ctx.openNewTask();\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"addTaskStatus\", true)(\"btnShoStatus\", ctx.openBool);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.openBool));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTask);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.taskPriority);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"addTaskStatus\", true);\n      }\n    },\n    dependencies: [i1.NgClass, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, i3.BtnComponent],\n    styles: [\"fieldset[_ngcontent-%COMP%]{margin-bottom:20px;overflow:hidden;background-color:#fff;height:0px}fieldset.open[_ngcontent-%COMP%]{padding:8px 14px;min-height:210px;position:relative;border:dashed 2px #ccc;transition:height .2s ease,padding-top .3s ease,padding-bottom .3s ease}fieldset.open[_ngcontent-%COMP%]   a.close-win[_ngcontent-%COMP%]{width:30px;height:30px;display:block;position:absolute;right:4px;top:4px}fieldset.open[_ngcontent-%COMP%]   a.close-win[_ngcontent-%COMP%]:before, fieldset.open[_ngcontent-%COMP%]   a.close-win[_ngcontent-%COMP%]:after{content:\\\"\\\";display:block;width:18px;height:4px;background:#666;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%) rotate(44deg)}fieldset.open[_ngcontent-%COMP%]   a.close-win[_ngcontent-%COMP%]:after{transform:translate(-50%,-50%) rotate(-44deg)}.inp__add-task[_ngcontent-%COMP%]{width:90%;height:40px;border:solid 1px #999999}label[_ngcontent-%COMP%]{min-width:50px;display:flex;flex-direction:column;align-items:center;justify-content:center;margin-right:20px}select[_ngcontent-%COMP%]{min-width:90px;margin-right:20px;text-align:center}p.txt__priority[_ngcontent-%COMP%]{width:100%;padding-top:12px;clear:both;overflow:hidden}\"]\n  });\n  return AddTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}